# Generated by Django 4.2.11 on 2024-07-17 11:32

from django.db import migrations

import openwisp_radius.base.validators
import openwisp_utils.fields
from openwisp_radius import settings as app_settings


class Migration(migrations.Migration):
    dependencies = [
        (
            "sample_radius",
            "0028_alter_organizationradiussettings_allowed_mobile_prefixes_and_more",
        ),
    ]

    operations = [
        migrations.AlterField(
            model_name="organizationradiussettings",
            name="allowed_mobile_prefixes",
            field=openwisp_utils.fields.FallbackTextField(
                blank=True,
                default=None,
                fallback=",".join(app_settings.ALLOWED_MOBILE_PREFIXES),
                help_text=(
                    "Comma separated list of international mobile prefixes"
                    " allowed to register via the user registration API."
                ),
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="organizationradiussettings",
            name="freeradius_allowed_hosts",
            field=openwisp_utils.fields.FallbackTextField(
                blank=True,
                default=None,
                fallback=",".join(app_settings.FREERADIUS_ALLOWED_HOSTS),
                help_text=(
                    "Comma separated list of IP addresses allowed to access"
                    " freeradius API"
                ),
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="organizationradiussettings",
            name="password_reset_url",
            field=openwisp_utils.fields.FallbackCharField(
                blank=True,
                default=None,
                fallback=app_settings.DEFAULT_PASSWORD_RESET_URL,
                help_text="Enter the URL where users can reset their password",
                max_length=200,
                null=True,
                validators=[
                    openwisp_radius.base.validators.password_reset_url_validator
                ],
                verbose_name="Password reset URL",
            ),
        ),
        migrations.AlterField(
            model_name="organizationradiussettings",
            name="sms_cooldown",
            field=openwisp_utils.fields.FallbackPositiveIntegerField(
                blank=True,
                default=None,
                fallback=app_settings.SMS_COOLDOWN,
                help_text=(
                    "Time period a user will have to wait before requesting "
                    "another SMS token (in seconds)."
                ),
                null=True,
                verbose_name="SMS Cooldown",
            ),
        ),
    ]
